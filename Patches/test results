Erann,I reviewed the above patch and found that the compiled code matchedthe patch as provided.  I then ran a forth test which indicated thatthere are still some things that need to be changed.  Attached is thetest code and results.  As you can see, we end up with extra vectors atrim 0, 90 and the optst routine gets called twice at rim 90.While the patch doesn't quite work, it appears that your compilationefforts are working properly.Joe760                 Unit 0  Part 0  Abs   760 0 ( GLL - AI TEST CODE CHECK ) HEX 1 2 : 1ST-DSPVECTOR ." 1ST-DSPVECTOR RIM= " DUP . CR ;  : TS! ; 3 VARIABLE ADDR-BUFFER 400 ALLOT ADDR-BUFFER  ADDR-BUFFER ! 4 : MAT-LOAD ." MAT-LOAD" CR ;  VARIABLE CMDPTR 5 6 : OPTST ." OPTST VECTOR STORE RIM= " DUP . CR ; 7 8 : SDSPIN DUP 15 = IF 1ST-DSPVECTOR TS! THEN  DUP 28 = IF 9 ADDR-BUFFER DUP @ 20 + DUP 4CF8 > IF DROP 4800 THEN10 DUP ROT 2+ 20 MOVE ADDR-BUFFER ! THEN11 DUP 12 MOD 0 = IF OPTST THEN12 DUP 5A = IF OPTST MAT-LOAD 4FF0 C@ 20 - 2/ CMDPTR +! THEN ;1314 : T1 5B 0 DO I SDSPIN DROP LOOP ;15Operation  of T1 results in the following:OPTST VECTOR STORE RIM= 0OPTST VECTOR STORE RIM= 181ST-DSPVECTOR RIM= 21OPTST VECTOR STORE RIM= 36OPTST VECTOR STORE RIM= 54OPTST VECTOR STORE RIM= 72OPTST VECTOR STORE RIM= 90OPTST VECTOR STORE RIM= 90MAT-LOAD